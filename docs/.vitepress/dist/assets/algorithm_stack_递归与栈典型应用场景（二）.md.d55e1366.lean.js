import{_ as s,c as a,o as n,a as l}from"./app.16764a97.js";const E=JSON.parse(`{"title":"递归与栈典型应用场景（二）","description":"","frontmatter":{},"headers":[{"level":2,"title":"场景一：验证栈序列","slug":"场景一-验证栈序列","link":"#场景一-验证栈序列","children":[]},{"level":2,"title":"描述：给定 pushed 和 popped 两个序列，每个序列中的值都不重复，只有当它们可能是在最初空栈上进行的推入 push 和弹出 pop 操作序列的结果时，返回 true；否则，返回 false 。","slug":"描述-给定-pushed-和-popped-两个序列-每个序列中的值都不重复-只有当它们可能是在最初空栈上进行的推入-push-和弹出-pop-操作序列的结果时-返回-true-否则-返回-false-。","link":"#描述-给定-pushed-和-popped-两个序列-每个序列中的值都不重复-只有当它们可能是在最初空栈上进行的推入-push-和弹出-pop-操作序列的结果时-返回-true-否则-返回-false-。","children":[]},{"level":2,"title":"**示例 **","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"算法思路：贪心算法","slug":"算法思路-贪心算法","link":"#算法思路-贪心算法","children":[]},{"level":2,"title":"代码编写如下：","slug":"代码编写如下","link":"#代码编写如下","children":[]},{"level":2,"title":"场景二：有效括号","slug":"场景二-有效括号","link":"#场景二-有效括号","children":[]},{"level":2,"title":"描述：给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。","slug":"描述-给定一个只包括-的字符串-s-判断字符串是否有效。","link":"#描述-给定一个只包括-的字符串-s-判断字符串是否有效。","children":[]},{"level":2,"title":"算法思路：","slug":"算法思路","link":"#算法思路","children":[]},{"level":2,"title":"代码编写如下：","slug":"代码编写如下-1","link":"#代码编写如下-1","children":[]},{"level":2,"title":"方法二：使用Map","slug":"方法二-使用map","link":"#方法二-使用map","children":[]},{"level":2,"title":"场景三：删除最外层的括号","slug":"场景三-删除最外层的括号","link":"#场景三-删除最外层的括号","children":[]},{"level":2,"title":"描述：有效括号字符串为空 (\\"\\")、\\"(\\" + A + \\")\\" 或 A + B，其中 A 和 B 都是有效的括号字符串，+ 代表字符串的连接。例如，\\"\\"，\\"()\\"，\\"(())()\\" 和 \\"(()(()))\\" 都是有效的括号字符串。","slug":"描述-有效括号字符串为空-、-a-或-a-b-其中-a-和-b-都是有效的括号字符串-代表字符串的连接。例如-和-都是有效的括号字符串。","link":"#描述-有效括号字符串为空-、-a-或-a-b-其中-a-和-b-都是有效的括号字符串-代表字符串的连接。例如-和-都是有效的括号字符串。","children":[]},{"level":2,"title":"示例：","slug":"示例-1","link":"#示例-1","children":[]},{"level":2,"title":"算法思路：","slug":"算法思路-1","link":"#算法思路-1","children":[]},{"level":2,"title":"代码编写如下：","slug":"代码编写如下-2","link":"#代码编写如下-2","children":[]},{"level":2,"title":"场景四：移除无效括号","slug":"场景四-移除无效括号","link":"#场景四-移除无效括号","children":[]},{"level":2,"title":"描述：给你一个由 '('、')' 和小写字母组成的字符串 s。","slug":"描述-给你一个由-、-和小写字母组成的字符串-s。","link":"#描述-给你一个由-、-和小写字母组成的字符串-s。","children":[]},{"level":2,"title":"示例：","slug":"示例-2","link":"#示例-2","children":[]},{"level":2,"title":"算法思路：","slug":"算法思路-2","link":"#算法思路-2","children":[]},{"level":2,"title":"代码实现如下：","slug":"代码实现如下","link":"#代码实现如下","children":[]}],"relativePath":"algorithm/stack/递归与栈典型应用场景（二）.md"}`),p={name:"algorithm/stack/递归与栈典型应用场景（二）.md"},o=l("",44),t=[o];function e(c,r,y,F,D,i){return n(),a("div",null,t)}const A=s(p,[["render",e]]);export{E as __pageData,A as default};

import{_ as s,c as a,o as n,a as p}from"./app.16764a97.js";const l="/assets/241708372951952.29cc482b.png",A=JSON.parse('{"title":"深入理解javascript原型和闭包—简介[作用域]","description":"","frontmatter":{},"headers":[],"relativePath":"interview/javascript/深入理解javascript原型和闭包—简介[作用域].md"}'),o={name:"interview/javascript/深入理解javascript原型和闭包—简介[作用域].md"},t=p(`<h1 id="深入理解javascript原型和闭包—简介-作用域" tabindex="-1">深入理解javascript原型和闭包—简介[作用域] <a class="header-anchor" href="#深入理解javascript原型和闭包—简介-作用域" aria-hidden="true">#</a></h1><p>提到作用域，有一句话大家（有js开发经验者）可能比较熟悉:&quot;javascript没有块级作用域&quot;。所谓&quot;块&quot;，就是大括号&quot;{}&quot;中间的语句。例如if语句:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> (i </span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">name</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">albert</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(name)</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// albert</span></span>
<span class="line"></span></code></pre></div><p>再比如for语句：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#BABED8;"> (</span><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;">i</span><span style="color:#89DDFF;">++</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(i)</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 10</span></span>
<span class="line"></span></code></pre></div><p>所以，我们在编写代码的时候，不要在”块“里面声明变量，要在代码一开始就声明好。以免发生歧义。 如：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#BABED8;"> (i </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> i</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;">i</span><span style="color:#89DDFF;">++</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(i)</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 10</span></span>
<span class="line"></span></code></pre></div><p>其实，你光知道&quot;javascript没有块级作用域&quot;是完全不够的，你需要知道的是--<strong>javascript除了全局作用域之外，只有函数可以创建的作用域。</strong></p><p>所以，<strong>我们在声明变量时，全局代码要在代码前端声明，函数中要在函数体一开始就声明好。除了这两个地方，其他地方都不要出现变量声明。而且建议用&quot;单var&quot;形式。</strong></p><p>下面继续说作用域。作用域是一个很抽象的概念，类似一个”地盘“</p><p><img src="`+l+'" alt="16f879b5b51541a1"></p><p>如上图，全局代码和fn、bar两个函数都会形成一个作用域。而且，<strong>作用域有上下级的关系，上下级关系的确定就看函数是在哪个作用域下创建的。</strong> 例如，fn作用域下创建的bar函数，那么&quot;fn作用域&quot;就是&quot;bar作用域&quot;的上级。</p><p><strong>作用域最大的用处就是隔离变量，不同作用域下同名变量不会有冲突。</strong> 例如以上代码中，三个作用域下都声明了&quot;a&quot;这个变量，但是他们不会有冲突。各自的作用域下，用各自的&quot;a&quot;。</p><blockquote><p>下一节将把作用域和执行上下文环境结合起来说一说。</p></blockquote>',14),e=[t];function c(r,i,y,D,F,B){return n(),a("div",null,e)}const E=s(o,[["render",c]]);export{A as __pageData,E as default};

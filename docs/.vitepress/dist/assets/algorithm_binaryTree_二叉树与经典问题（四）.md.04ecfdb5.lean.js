import{_ as s,c as a,o as n,a as l}from"./app.16764a97.js";const A=JSON.parse('{"title":"二叉树与经典问题（四）","description":"","frontmatter":{},"headers":[{"level":2,"title":"场景一：解决表达式求值","slug":"场景一-解决表达式求值","link":"#场景一-解决表达式求值","children":[]},{"level":2,"title":"描述：给定一个二叉树，返回它的 后序 遍历。","slug":"描述-给定一个二叉树-返回它的-后序-遍历。","link":"#描述-给定一个二叉树-返回它的-后序-遍历。","children":[]},{"level":2,"title":"示例：","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"算法思路：","slug":"算法思路","link":"#算法思路","children":[]},{"level":2,"title":"代码编写如下：","slug":"代码编写如下","link":"#代码编写如下","children":[]},{"level":2,"title":"使用递归方法来实现：","slug":"使用递归方法来实现","link":"#使用递归方法来实现","children":[]},{"level":2,"title":"场景二：验证二叉树的前序序列化","slug":"场景二-验证二叉树的前序序列化","link":"#场景二-验证二叉树的前序序列化","children":[]},{"level":2,"title":"描述：序列化二叉树的一种方法是使用前序遍历。当我们遇到一个非空节点时，我们可以记录下这个节点的值。如果它是一个空节点，我们可以使用一个标记值记录，例如 #。","slug":"描述-序列化二叉树的一种方法是使用前序遍历。当我们遇到一个非空节点时-我们可以记录下这个节点的值。如果它是一个空节点-我们可以使用一个标记值记录-例如-。","link":"#描述-序列化二叉树的一种方法是使用前序遍历。当我们遇到一个非空节点时-我们可以记录下这个节点的值。如果它是一个空节点-我们可以使用一个标记值记录-例如-。","children":[]},{"level":2,"title":"算法思路：","slug":"算法思路-1","link":"#算法思路-1","children":[]},{"level":2,"title":"代码编写如下：","slug":"代码编写如下-1","link":"#代码编写如下-1","children":[]},{"level":2,"title":"场景三：基本计算器 II","slug":"场景三-基本计算器-ii","link":"#场景三-基本计算器-ii","children":[]},{"level":2,"title":"描述：给你一个字符串表达式 s ，请你实现一个基本计算器来计算并返回它的值。整数除法仅保留整数部分。","slug":"描述-给你一个字符串表达式-s-请你实现一个基本计算器来计算并返回它的值。整数除法仅保留整数部分。","link":"#描述-给你一个字符串表达式-s-请你实现一个基本计算器来计算并返回它的值。整数除法仅保留整数部分。","children":[]},{"level":2,"title":"算法思路：","slug":"算法思路-2","link":"#算法思路-2","children":[]},{"level":2,"title":"代码编写如下：","slug":"代码编写如下-2","link":"#代码编写如下-2","children":[]}],"relativePath":"algorithm/binaryTree/二叉树与经典问题（四）.md"}'),p={name:"algorithm/binaryTree/二叉树与经典问题（四）.md"},o=l("",40),e=[o];function t(c,r,y,F,i,D){return n(),a("div",null,e)}const E=s(p,[["render",t]]);export{A as __pageData,E as default};

import{_ as s,c as n,o as a,a as l}from"./app.16764a97.js";const p="/assets/chainTable.094a6f31.png",o="/assets/51946-20190801143911531-1099045735.aa2240d9.png",e="/assets/51946-20190801143312538-1613512533.6b8d01e0.png",t="/assets/51946-20190801151204105-956168008.a7cb3915.png",c="/assets/51946-20190801151734433-1721118931.f6327b8e.png",r="/assets/result.24acabbf.png",g=JSON.parse('{"title":"单向链表","description":"","frontmatter":{},"headers":[{"level":2,"title":"什么是单向链表","slug":"什么是单向链表","link":"#什么是单向链表","children":[{"level":4,"title":"所谓链表是指一种常用的数据结构，通常由一系列结点组成，每个结点含两个信息域和指针域，信息域用于存放有关的数据项，指针域则用于指向链表的下一个结点。","slug":"所谓链表是指一种常用的数据结构-通常由一系列结点组成-每个结点含两个信息域和指针域-信息域用于存放有关的数据项-指针域则用于指向链表的下一个结点。","link":"#所谓链表是指一种常用的数据结构-通常由一系列结点组成-每个结点含两个信息域和指针域-信息域用于存放有关的数据项-指针域则用于指向链表的下一个结点。","children":[]}]},{"level":2,"title":"程序内部实现原理","slug":"程序内部实现原理","link":"#程序内部实现原理","children":[]},{"level":2,"title":"单向链表特性","slug":"单向链表特性","link":"#单向链表特性","children":[]},{"level":2,"title":"单向链表实现方法","slug":"单向链表实现方法","link":"#单向链表实现方法","children":[]},{"level":2,"title":"使用javascript实现单向链表数据结构","slug":"使用javascript实现单向链表数据结构","link":"#使用javascript实现单向链表数据结构","children":[{"level":4,"title":"首先我们需要一个辅助类，用来描述链表中的节点，这个类很简单，只需要两个属性，一个用来保存节点的值，一个用来保存指向下一个节点的指针。","slug":"首先我们需要一个辅助类-用来描述链表中的节点-这个类很简单-只需要两个属性-一个用来保存节点的值-一个用来保存指向下一个节点的指针。","link":"#首先我们需要一个辅助类-用来描述链表中的节点-这个类很简单-只需要两个属性-一个用来保存节点的值-一个用来保存指向下一个节点的指针。","children":[]},{"level":4,"title":"链表类的基本骨架","slug":"链表类的基本骨架","link":"#链表类的基本骨架","children":[]},{"level":4,"title":"让我们从查找链表元素的方法getElementAt()开始，因为后面我们会多次用到它。","slug":"让我们从查找链表元素的方法getelementat-开始-因为后面我们会多次用到它。","link":"#让我们从查找链表元素的方法getelementat-开始-因为后面我们会多次用到它。","children":[]}]}],"relativePath":"algorithm/chainTable/单向链表.md"}'),F={name:"algorithm/chainTable/单向链表.md"},y=l("",36),D=[y];function i(B,A,E,d,h,u){return a(),n("div",null,D)}const f=s(F,[["render",i]]);export{g as __pageData,f as default};
